version: '3.8'

services:
  # Enhanced Neo4j with high-throughput configuration
  neo4j:
    image: neo4j:5.20-community
    container_name: cmdb-neo4j
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      # Enhanced performance configuration for enterprise data generation
      - NEO4J_server_memory_heap_initial__size=2G
      - NEO4J_server_memory_heap_max__size=3G
      - NEO4J_server_memory_pagecache_size=1G
      - NEO4J_dbms_memory_transaction_total_max=4G
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./data:/import
    networks:
      - cmdb-network
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 3G

  # Redis for job queue and progress tracking
  redis:
    image: redis:7-alpine
    container_name: cmdb-redis
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cmdb-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis Commander for queue monitoring
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: cmdb-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - cmdb-network

  app:
    build: .
    container_name: cmdb-app
    environment:
      - NODE_ENV=production
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URL=redis://redis:6379
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - neo4j
      - redis
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    networks:
      - cmdb-network
    restart: unless-stopped

  # Scalable worker service for data generation
  data-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - NODE_ENV=production
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URL=redis://redis:6379
      - WORKER_CONCURRENCY=5
    depends_on:
      - neo4j
      - redis
    volumes:
      - ./workers:/app/workers
      - ./src:/app/src
    networks:
      - cmdb-network
    restart: unless-stopped
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis_data:

networks:
  cmdb-network:
    driver: bridge